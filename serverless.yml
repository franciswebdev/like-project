# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: franciswebdev
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: like-app
# "service" is the name of this project. This will also be added to your AWS resource names.
service: aws-like-project

stages:
  default:
    params:
      usersName: "users-table-${sls:stage}"
      likesName: "likes-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [LikesTable, Arn]
  environment:
    USERS_TABLE: ${param:usersName}
    LIKES_TABLE: ${param:likesName}

package:
  exclude:
    - node_modules/**
    - layers/**

layers:
  cake:
    path: layers
    compatibleRuntimes:
      - nodejs20.x

functions:
  api:
    handler: dist/lambda.handler
    layers:
      - !Ref CakeLambdaLayer
    events:
      - httpApi: "*"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: songId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: songId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:usersName}
    LikesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: songId
            AttributeType: S
        KeySchema:
          - AttributeName: songId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:likesName}
